apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: pern-app-set
  namespace: argocd
  labels:
    app.kubernetes.io/name: pern-app-set
    app.kubernetes.io/component: applicationset
    app.kubernetes.io/part-of: pern-gitops
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    applicationset.argocd.argoproj.io/description: "Production-grade multi-environment PERN stack deployment"
spec:
  # Single git generator discovers environment overlays
  generators:
  - git:
      repoURL: https://github.com/mankinimbom/pern-gitops
      revision: HEAD
      directories:
      - path: apps/pern-app/overlays/*

  # Global application template applied to each discovered directory
  template:
    metadata:
      name: 'pern-app-{{path.basename}}'
      namespace: argocd
      labels:
        app.kubernetes.io/name: pern-app
        app.kubernetes.io/instance: '{{path.basename}}'
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: pern-application
        app.kubernetes.io/managed-by: argocd
        environment: '{{path.basename}}'
        tier: '{{path.basename}}'
        deployment.strategy: progressive-delivery
      annotations:
        notifications.argoproj.io/subscribe.on-deployed.slack: pern-deployments
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: pern-deployments
        notifications.argoproj.io/subscribe.on-sync-failed.slack: pern-alerts
        notifications.argoproj.io/subscribe.on-health-degraded.slack: pern-alerts
        app.argocd.argoproj.io/environment: '{{path.basename}}'
        app.argocd.argoproj.io/repo: 'pern-gitops'
        app.argocd.argoproj.io/path: '{{path}}'
        deployment.argocd.argoproj.io/strategy: 'progressive'
        deployment.argocd.argoproj.io/rollout-enabled: 'true'
      finalizers:
      - resources-finalizer.argocd.argoproj.io
    spec:
      project: pern-app
      source:
        repoURL: https://github.com/mankinimbom/pern-gitops
        targetRevision: HEAD
        path: '{{path}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: 'pern-app'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: false
        syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=foreground
        - PruneLast=true
        - ServerSideApply=true
        - RespectIgnoreDifferences=true
        - ApplyOutOfSyncOnly=true
        - Replace=false
        retry:
          limit: 10
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 5m
      ignoreDifferences:
      - group: argoproj.io
        kind: Rollout
        jsonPointers:
        - /spec/replicas
        - /status
        - /metadata/generation
      - group: autoscaling
        kind: HorizontalPodAutoscaler
        jsonPointers:
        - /spec/targetRef/apiVersion
        - /status/currentReplicas
        - /status/desiredReplicas
      - group: apps
        kind: StatefulSet
        jsonPointers:
        - /spec/replicas
        - /status
        - /spec/volumeClaimTemplates/*/metadata/creationTimestamp
      - group: ''
        kind: Service
        jsonPointers:
        - /spec/clusterIP
        - /metadata/resourceVersion
      - group: ''
        kind: Secret
        jsonPointers:
        - /data
        - /metadata/resourceVersion
      - group: networking.k8s.io
        kind: Ingress
        jsonPointers:
        - /status
        - /metadata/generation
      info:
      - name: 'Environment'
        value: '{{path.basename}}'
      - name: 'Repository'
        value: 'https://github.com/mankinimbom/pern-gitops'
      - name: 'Path'
        value: '{{path}}'
      - name: 'Deployment Strategy'
        value: 'Progressive Delivery with Argo Rollouts'
      - name: 'Components'
        value: 'Frontend (React), Backend (Node.js), Database (PostgreSQL), Cache (Redis)'
      - name: 'Monitoring'
        value: 'Prometheus metrics, Grafana dashboards'
      - name: 'Security'
        value: 'Network policies, RBAC, Pod security standards'
      - name: 'Scaling'
        value: 'Horizontal Pod Autoscaler based on CPU/Memory'
      revisionHistoryLimit: 10

  # No ApplicationSet-level strategy/syncPolicy for compatibility with older controllers
