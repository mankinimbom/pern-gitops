apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: pern-app
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  description: Production-grade PERN Stack Application Project with security controls
  
  # Repository allowlist with specific branch restrictions
  sourceRepos:
  - 'https://github.com/mankinimbom/pern-gitops'
  
  # Environment-specific destination namespaces
  destinations:
  - namespace: 'pern-app-staging'
    server: 'https://kubernetes.default.svc'
  - namespace: 'pern-app-production'
    server: 'https://kubernetes.default.svc'
  - namespace: 'monitoring'
    server: 'https://kubernetes.default.svc'
  - namespace: 'argocd'
    server: 'https://kubernetes.default.svc'
  
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: networking.k8s.io
    kind: Ingress
    
  # Namespace-level resources with comprehensive coverage
  namespaceResourceWhitelist:
  - group: ''
    kind: Service
  - group: ''
    kind: Secret
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: PersistentVolumeClaim
  - group: ''
    kind: ServiceAccount
  - group: apps
    kind: Deployment
  - group: apps
    kind: StatefulSet
  - group: argoproj.io
    kind: Rollout
  - group: argoproj.io
    kind: AnalysisTemplate
  - group: argoproj.io
    kind: AnalysisRun
  - group: networking.k8s.io
    kind: Ingress
  - group: networking.k8s.io
    kind: NetworkPolicy
  - group: autoscaling
    kind: HorizontalPodAutoscaler
  - group: policy
    kind: PodDisruptionBudget
  - group: rbac.authorization.k8s.io
    kind: Role
  - group: rbac.authorization.k8s.io
    kind: RoleBinding
  - group: monitoring.coreos.com
    kind: ServiceMonitor
  - group: monitoring.coreos.com
    kind: PodMonitor
  
  # Security and operational policies
  orphanedResources:
    warn: true
    ignore:
    - group: ''
      kind: Secret
      name: '*-token-*'
  
  # RBAC with principle of least privilege
  roles:
  - name: admin
    description: Full admin access to PERN app environments
    policies:
    - p, proj:pern-app:admin, applications, *, pern-app/*, allow
    - p, proj:pern-app:admin, repositories, *, *, allow
    - p, proj:pern-app:admin, certificates, *, *, allow
    - p, proj:pern-app:admin, accounts, *, *, allow
    groups:
    - argocd-admins
    - platform-team
  
  - name: production-deployer
    description: Production deployment permissions with restrictions
    policies:
    - p, proj:pern-app:production-deployer, applications, get, pern-app/*production*, allow
    - p, proj:pern-app:production-deployer, applications, sync, pern-app/*production*, allow
    - p, proj:pern-app:production-deployer, applications, action/*, pern-app/*production*, allow
    groups:
    - production-deployers
    - senior-engineers
  
  - name: developer
    description: Developer access with staging-only sync permissions
    policies:
    - p, proj:pern-app:developer, applications, get, pern-app/*, allow
    - p, proj:pern-app:developer, applications, sync, pern-app/*staging*, allow
    - p, proj:pern-app:developer, repositories, get, *, allow
    - p, proj:pern-app:developer, logs, get, pern-app/*, allow
    groups:
    - argocd-developers
    - engineering-team
  
  - name: viewer
    description: Read-only access to applications
    policies:
    - p, proj:pern-app:viewer, applications, get, pern-app/*, allow
    - p, proj:pern-app:viewer, logs, get, pern-app/*, allow
    groups:
    - stakeholders
    - qa-team
  
  # Git webhook restrictions
  permitOnlyProjectScopedClusters: false
