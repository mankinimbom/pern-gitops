apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: pern-app
spec:
  provider:
    vault:
      server: "https://vault.example.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "pern-app"
          serviceAccountRef:
            name: "external-secrets-sa"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: backend-secrets
  namespace: pern-app
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: backend-secret
    creationPolicy: Owner
  data:
  - secretKey: database-url
    remoteRef:
      key: pern-app/database
      property: url
  - secretKey: jwt-secret
    remoteRef:
      key: pern-app/auth
      property: jwt-secret
  - secretKey: redis-url
    remoteRef:
      key: pern-app/redis
      property: url
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgresql-secrets
  namespace: pern-app
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: postgresql-secret
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: pern-app/database
      property: username
  - secretKey: password
    remoteRef:
      key: pern-app/database
      property: password
  - secretKey: database
    remoteRef:
      key: pern-app/database
      property: database
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: pern-app
  annotations:
    vault.hashicorp.com/role: "pern-app"