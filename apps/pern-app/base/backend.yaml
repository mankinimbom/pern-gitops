apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: backend
  labels:
    app: backend
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api-server
    app.kubernetes.io/part-of: pern-stack
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 3
  strategy:
    canary:
      canaryService: backend-canary-service
      stableService: backend-service
      trafficRouting:
        nginx:
          stableIngress: pern-app-ingress
      steps:
      - setWeight: 20
      - pause: {}
      - setWeight: 40
      - pause: {duration: 10s}
      - setWeight: 60
      - pause: {duration: 10s}
      - setWeight: 80
      - pause: {duration: 10s}
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: backend-canary-service
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        app.kubernetes.io/name: backend
        app.kubernetes.io/component: api-server
        app.kubernetes.io/part-of: pern-stack
        managed-by: argocd
        version: v1
    spec:
      serviceAccountName: backend-sa
      imagePullSecrets:
      - name: ghcr-creds
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: backend
        image: ghcr.io/mankinimbom/pern-backend:2c72736
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: database-url
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend-canary-service
  labels:
    app: backend
    service-type: canary
spec:
  selector:
    app: backend
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  selector:
    app: backend
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  type: ClusterIP
